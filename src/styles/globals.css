@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  * {
    /* scrollbar-width: thin;
    scrollbar-color: theme(colors.grey.DEFAULT / 10%) theme(colors.beige.DEFAULT); */
    /* cursor: none !important; */
    -ms-overflow-style: none; /* Internet Explorer 10+ */
    scrollbar-width: none !important; /* Firefox */
    scroll-margin-top: var(--navbar-docked-minimal-height);
  }
  *::-webkit-scrollbar {
    display: none !important; /* Safari and Chrome */
  }
  /* *::-webkit-scrollbar-track {
    @apply bg-dynamic-beige;
  }
  *::-webkit-scrollbar-thumb {
    @apply bg-dynamic-[grey_10];
  } */
  *::selection {
    @apply bg-dynamic-[grey_80] text-dynamic-beige;
  }
  * input[type='range'] {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
  }
  * input[type='range']::-webkit-slider-runnable-track {
    @apply bg-dynamic-[grey_60] h-1;
  }
  * input[type='range']::-moz-range-track {
    @apply bg-dynamic-[grey_60] h-1;
  }
  * input[type='range']::-webkit-slider-thumb {
    appearance: none;
    margin-top: calc(-0.5rem + 0.125rem);
    @apply bg-dynamic-grey h-4 w-4;
  }
  * input[type='range']::-moz-range-thumb {
    appearance: none;
    @apply bg-dynamic-grey h-4 w-4 rounded-none shadow-none;
  }
  * input[type='range']:disabled {
    @apply opacity-[0.2];
  }

  html {
    @apply bg-dynamic-beige;
  }
  html.lenis,
  html.lenis body {
    height: auto;
  }

  body {
    @apply min-w-80 hoverable:min-w-[calc(20rem-0.6875rem)] antialiased;
    @apply text-dynamic-grey font-helveticaNeue body;
  }

  .lenis.lenis-smooth {
    scroll-behavior: auto !important;
  }
  .lenis.lenis-smooth [data-lenis-prevent] {
    overscroll-behavior: contain;
  }
  .lenis.lenis-stopped {
    overflow: hidden;
  }
  .lenis.lenis-scrolling iframe {
    pointer-events: none;
  }

  @media (prefers-color-scheme: dark) {
    * {
      scrollbar-color: theme(colors.beige.DEFAULT / 10%) theme(colors.grey.DEFAULT);
    }
  }
}

@layer components {
  .hero-roles {
    counter-reset: roles;
  }

  .hero-roles p::before {
    display: inline;
    margin-right: 1ch;
    counter-increment: roles;
    content: '(' counter(roles) ')';
  }
}
